// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using my_shoppinglist_api.Helpers.Context;

namespace my_shoppinglist_api.Migrations
{
    [DbContext(typeof(MainContext))]
    [Migration("20200528141921_AddedOwnerConstrains")]
    partial class AddedOwnerConstrains
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("my_shoppinglist_api.Models.Database.GroceryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("AddedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Amount")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<bool>("Purchased")
                        .HasColumnType("boolean");

                    b.Property<int>("ShopId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ShopId");

                    b.ToTable("GroceryItem");
                });

            modelBuilder.Entity("my_shoppinglist_api.Models.Database.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("ShoppingGroupId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ShoppingGroupId");

                    b.ToTable("Shop");
                });

            modelBuilder.Entity("my_shoppinglist_api.Models.Database.ShoppingGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("OwnerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("ShoppingGroup");
                });

            modelBuilder.Entity("my_shoppinglist_api.Models.Database.ShoppingGroupUser", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("ShoppingGroupId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "ShoppingGroupId");

                    b.HasIndex("ShoppingGroupId");

                    b.ToTable("ShoppingGroupUser");
                });

            modelBuilder.Entity("my_shoppinglist_api.Models.Database.ShoppingSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ShopId")
                        .HasColumnType("integer");

                    b.Property<int>("ShoppingGroupId")
                        .HasColumnType("integer");

                    b.Property<int>("SortingMethod")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ShopId");

                    b.HasIndex("ShoppingGroupId");

                    b.HasIndex("UserId");

                    b.ToTable("ShoppingSetting");
                });

            modelBuilder.Entity("my_shoppinglist_api.Models.Database.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("my_shoppinglist_api.Models.Database.GroceryItem", b =>
                {
                    b.HasOne("my_shoppinglist_api.Models.Database.Shop", "Shop")
                        .WithMany("GroceryItems")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("my_shoppinglist_api.Models.Database.Shop", b =>
                {
                    b.HasOne("my_shoppinglist_api.Models.Database.ShoppingGroup", "ShoppingGroup")
                        .WithMany("Shops")
                        .HasForeignKey("ShoppingGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("my_shoppinglist_api.Models.Database.ShoppingGroup", b =>
                {
                    b.HasOne("my_shoppinglist_api.Models.Database.User", "Owner")
                        .WithMany("ShoppingGroups")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("my_shoppinglist_api.Models.Database.ShoppingGroupUser", b =>
                {
                    b.HasOne("my_shoppinglist_api.Models.Database.ShoppingGroup", "ShoppingGroup")
                        .WithMany("ShoppingGroupUsers")
                        .HasForeignKey("ShoppingGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("my_shoppinglist_api.Models.Database.User", "User")
                        .WithMany("ShoppingGroupUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("my_shoppinglist_api.Models.Database.ShoppingSettings", b =>
                {
                    b.HasOne("my_shoppinglist_api.Models.Database.Shop", "Shop")
                        .WithMany()
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("my_shoppinglist_api.Models.Database.ShoppingGroup", "ShoppingGroup")
                        .WithMany()
                        .HasForeignKey("ShoppingGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("my_shoppinglist_api.Models.Database.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
